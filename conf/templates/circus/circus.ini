[circus]
check_delay = 5
statsd = 1
stats_endpoint = tcp://127.0.0.1:5557
endpoint = tcp://127.0.0.1:5555
pubsub_endpoint = tcp://127.0.0.1:5556
logoutput = {{ log_dir }}/circus.log

[watcher:circushttpd]
working_dir = {{ code_root }}
cmd = {{ virtualenv_root }}/bin/circushttpd
args = --port={{ circushttpd_port }}
copy_env = True
copy_path = True
virtualenv = {{ virtualenv_root }}

[socket:rapidsms]
host = 127.0.0.1
port = {{ django_port }}

[watcher:rapidsms]
cmd = {{ virtualenv_root }}/bin/chaussette --fd $(circus.sockets.rapidsms) --backend=meinheld thousand.wsgi.application
use_sockets = True
numprocesses = 1
copy_env = True
copy_path = True
virtualenv = {{ virtualenv_root }}

stderr_stream.class = FileStream
stdout_stream.class = FileStream
stdout_stream.filename = {{ log_dir }}/rapidsms-stdout.log
stderr_stream.filename = {{ log_dir }}/rapidsms-stderr.log
# push to log every 300 ms
stdout_stream.refresh_time = 0.3
# rotate the log file when it reaches 1 gb
# and save 5 copied of rotated files
stdout_stream.max_bytes = 1073741824
stdout_stream.backup_count = 5
hooks.after_start = thousand.hooks.run_raven

[watcher:dcelery]
working_dir = {{ code_root }}
cmd = {{ virtualenv_root }}/bin/python
args = manage.py celery worker -E --loglevel=info --settings=$(circus.env.DJANGO_SETTINGS_MODULE)
copy_env = True
copy_path = True
virtualenv = {{ virtualenv_root }}

stderr_stream.class = FileStream
stdout_stream.class = FileStream
stdout_stream.filename = {{ log_dir }}/celery-stdout.log
stderr_stream.filename = {{ log_dir }}/celery-stderr.log
stdout_stream.refresh_time = 0.3
stdout_stream.max_bytes = 1073741824
stdout_stream.backup_count = 5

[watcher:dcelerybeat]
working_dir = {{ code_root }}
cmd = {{ virtualenv_root }}/bin/python
args = manage.py celery beat --loglevel=info --settings=$(circus.env.DJANGO_SETTINGS_MODULE)
copy_env = True
copy_path = True
virtualenv = {{ virtualenv_root }}

stderr_stream.class = FileStream
stdout_stream.class = FileStream
stdout_stream.filename = {{ log_dir }}/celerybeat-stdout.log
stderr_stream.filename = {{ log_dir }}/celerybeat-stderr.log
stdout_stream.refresh_time = 0.3
stdout_stream.max_bytes = 1073741824
stdout_stream.backup_count = 5

[watcher:dceleryflower]
working_dir = {{ code_root }}
cmd = {{ virtualenv_root }}/bin/python
args = manage.py celery flower --address=127.0.0.1 --port={{ celeryflower_port }} --loglevel=info --settings=$(circus.env.DJANGO_SETTINGS_MODULE)
copy_env = True
copy_path = True
virtualenv = {{ virtualenv_root }}

stderr_stream.class = FileStream
stdout_stream.class = FileStream
stdout_stream.filename = {{ log_dir }}/celeryflower-stdout.log
stderr_stream.filename = {{ log_dir }}/celeryflower-stderr.log
stdout_stream.refresh_time = 0.3
stdout_stream.max_bytes = 1073741824
stdout_stream.backup_count = 5

[env]
PYTHONPATH = {{ code_root }}
DJANGO_SETTINGS_MODULE= {{ settings }}
